name: Test Setup

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  test-credentials:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-dotenv google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
        
    - name: Test credential decoding
      env:
        GMAIL_CREDENTIALS: ${{ secrets.GMAIL_CREDENTIALS }}
        GMAIL_TOKEN: ${{ secrets.GMAIL_TOKEN }}
        GOOGLE_SHEETS_ID: ${{ secrets.GOOGLE_SHEETS_ID }}
        PHOTOGRAPHER_EMAIL: ${{ secrets.PHOTOGRAPHER_EMAIL }}
      run: |
        echo "🔍 Testing GitHub Secrets Setup"
        echo "================================"
        
        # Check if secrets are set
        echo "✓ Checking if secrets exist..."
        [ ! -z "$GMAIL_CREDENTIALS" ] && echo "  ✅ GMAIL_CREDENTIALS is set" || echo "  ❌ GMAIL_CREDENTIALS is missing"
        [ ! -z "$GMAIL_TOKEN" ] && echo "  ✅ GMAIL_TOKEN is set" || echo "  ❌ GMAIL_TOKEN is missing"
        [ ! -z "$GOOGLE_SHEETS_ID" ] && echo "  ✅ GOOGLE_SHEETS_ID is set" || echo "  ❌ GOOGLE_SHEETS_ID is missing"
        [ ! -z "$PHOTOGRAPHER_EMAIL" ] && echo "  ✅ PHOTOGRAPHER_EMAIL is set" || echo "  ❌ PHOTOGRAPHER_EMAIL is missing"
        
        # Try to decode credentials
        echo ""
        echo "✓ Testing base64 decoding..."
        if [ ! -z "$GMAIL_CREDENTIALS" ]; then
          echo "$GMAIL_CREDENTIALS" | base64 -d > credentials.json 2>/dev/null
          if [ $? -eq 0 ]; then
            echo "  ✅ GMAIL_CREDENTIALS decoded successfully"
            echo "  📏 Size: $(wc -c < credentials.json) bytes"
            # Check if it's valid JSON
            python -c "import json; json.load(open('credentials.json'))" 2>/dev/null
            [ $? -eq 0 ] && echo "  ✅ Valid JSON format" || echo "  ❌ Invalid JSON format"
          else
            echo "  ❌ Failed to decode GMAIL_CREDENTIALS"
          fi
        fi
        
        if [ ! -z "$GMAIL_TOKEN" ]; then
          echo "$GMAIL_TOKEN" | base64 -d > token.json 2>/dev/null
          if [ $? -eq 0 ]; then
            echo "  ✅ GMAIL_TOKEN decoded successfully"
            echo "  📏 Size: $(wc -c < token.json) bytes"
          else
            echo "  ❌ Failed to decode GMAIL_TOKEN"
          fi
        fi
        
        # Test Gmail connection
        echo ""
        echo "✓ Testing Gmail API connection..."
        cat > test_gmail.py << 'EOF'
import os
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build

try:
    creds = Credentials.from_authorized_user_file('token.json')
    service = build('gmail', 'v1', credentials=creds)
    labels = service.users().labels().list(userId='me').execute()
    print('  ✅ Gmail API connection successful')
    print(f'  📊 Found {len(labels.get("labels", []))} labels')
except Exception as e:
    print(f'  ❌ Gmail API error: {e}')
EOF
        python test_gmail.py
        
        echo ""
        echo "✨ Test complete!"